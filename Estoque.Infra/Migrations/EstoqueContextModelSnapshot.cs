// <auto-generated />
using System;
using Estoque.Infra.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Estoque.Infra.Migrations
{
    [DbContext(typeof(EstoqueContext))]
    partial class EstoqueContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Estoque.Domain.Entities.Acesso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Hora")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Final")
                        .HasColumnType("datetime2");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Acesso");
                });

            modelBuilder.Entity("Estoque.Domain.Entities.Equipamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QtdEstoque")
                        .HasColumnType("int");

                    b.Property<int>("QtdTotal")
                        .HasColumnType("int");

                    b.Property<string>("Site")
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Equipamento");
                });

            modelBuilder.Entity("Estoque.Domain.Entities.MaquinaSolicitada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Concluida")
                        .HasColumnType("bit");

                    b.Property<int>("EquipamentoId")
                        .HasColumnType("int");

                    b.Property<int>("QtdSolicitada")
                        .HasColumnType("int");

                    b.Property<int>("SolicitanteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EquipamentoId");

                    b.HasIndex("SolicitanteId");

                    b.ToTable("MaquinaSolicitada");
                });

            modelBuilder.Entity("Estoque.Domain.Entities.Solicitante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Solicitante");
                });

            modelBuilder.Entity("Estoque.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Estoque.Domain.Entities.Solicitacao", b =>
            {
                b.Property<int>("IdSolicitacao")
                        .IsRequired()
                        .HasColumnType("int");

                b.Property<bool>("Concluida")
                    .IsRequired()
                    .HasColumnType("bit");

                b.Property<string>("NomeEquipamento")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<int>("QtdSolicitada")
                    .IsRequired()
                    .HasColumnType("int");

                b.Property<string>("NomeSolicitante")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.HasNoKey();

                b.HasIndex("IdSolicitacao");

                b.ToView("Solicitacao");
            });

            modelBuilder.Entity("Estoque.Domain.Entities.Acesso", b =>
                {
                    b.HasOne("Estoque.Domain.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Estoque.Domain.Entities.MaquinaSolicitada", b =>
                {
                    b.HasOne("Estoque.Domain.Entities.Equipamento", "Equipamento")
                        .WithMany()
                        .HasForeignKey("EquipamentoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Estoque.Domain.Entities.Solicitante", "Solicitante")
                        .WithMany()
                        .HasForeignKey("SolicitanteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Equipamento");

                    b.Navigation("Solicitante");
                });
#pragma warning restore 612, 618
        }
    }
}
